<div class="container">
  <div class="row w-100 text-left mt-3">
    <div class="col-10">
      <h1><%= @user.first_name.pluralize %> Garden!</h1>
      <h2>User Status: <%= @user.status.capitalize %></h2>
    </div>
    <div class="col-2 text-right">
      <%= link_to "Home", root_path, class: "btn btn-primary" %>
    </div>
  </div>

  <div class="middle-container w-100 mt-5">
    <div class="row gx-5">
      <div class="col">
        <div class="p-3 bg-white border">
          <h2>Statistics</h2>
          <p>You have planted a total of <strong><%= @garden.trees.count %></strong> trees!</p>
        </div>
      </div>
      <div class="col">
        <div class="p-3 bg-white border">
          <h2>Filter by:</h2>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="canvas-container w-100 mt-5">
  <div class="col">
    <canvas id="myCanvas" class="border p-3 w-100"></canvas>
  </div>
</div>

<script>
  const container = document.querySelector('.canvas-container');
  const containerWidth = container.clientWidth;
  const containerHeight = container.clientHeight;

  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(75, containerWidth / containerHeight, 0.1, 1000);

  const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('myCanvas'), alpha: true });
  renderer.setSize(containerWidth, containerHeight);
  renderer.setClearColor(0xffffff, 0);

  const createTree = () => {
    const trunkGeometry = new THREE.BoxGeometry(0.2, 1, 0.2);
    const trunkMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });
    const trunk = new THREE.Mesh(trunkGeometry, trunkMaterial);

    const leavesGeometry = new THREE.ConeGeometry(0.8, 1.5, 8);
    const leavesMaterial = new THREE.MeshBasicMaterial({ color: 0x1CB41C });
    const leaves = new THREE.Mesh(leavesGeometry, leavesMaterial);

    const treeGroup = new THREE.Group();

    trunk.position.y = 0.5;
    leaves.position.y = 1.5;

    treeGroup.add(trunk);
    treeGroup.add(leaves);

    let randomY = Math.random() * (-4 - (-1.5)) + (-1.5);
    let randomX = Math.random() * (9 - (-5)) + (-7);

    treeGroup.position.y = randomY;
    treeGroup.position.x = randomX;
    scene.add(treeGroup);

    return { trunk, leaves };
  };

  const trees = [];
  for (let i = 0; i < <%= @garden.trees.count %> ; i++) {
    trees.push(createTree());
  }

  camera.position.z = 6;

  const animate = function () {
    requestAnimationFrame(animate);

    trees.forEach(({ trunk, leaves }) => {
      trunk.rotation.y += 0.01;
      leaves.rotation.y += 0.01;
    });

    renderer.render(scene, camera);
  };

  animate();
</script>
